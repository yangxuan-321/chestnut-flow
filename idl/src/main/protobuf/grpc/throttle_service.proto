syntax = "proto3";

package com.zz.idl.cdp; // grpc 路径保持一致，不要动

option optimize_for = SPEED;


message ApiThrottleQuotaRequest {
    string          id        = 1; // 由调用端生成的字符
    ApiThrottleType t         = 2; // 优先级
    int64           ts        = 3; // 客户端的时间戳。实现: 服务端收到请求时，用本地时间戳覆写此值，供后面做过期/超时判断
    int64           timeout   = 4; // 客户端指定的超时时间
}

message ApiThrottleQuotaReply {
    string         id           = 1;
    ApiQuotaResult result       = 2;
    int64          ts           = 3;
    string         access_token = 4;
}


service ApiThrottleGatewayService {
    rpc acquire(ApiThrottleQuotaRequest) returns (ApiThrottleQuotaReply) {}
}


enum ApiThrottleType {
    API_THROTTLE_UNKNOWN = 0;
}

enum ApiQuotaResult {
    ApiQuotaOk        = 0;
    ApiQuotaNone      = 1; // 检测grpc接口
    ApiQuotaTimeout   = 2;
    ApiQuotaForbidden = 3;
}

